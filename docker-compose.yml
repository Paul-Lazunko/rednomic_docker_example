version: '2'

networks:
  app-network:
    driver: bridge
services:
  redis:
    image: 'bitnami/redis:latest'
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - app-network
  unit_a:
    depends_on:
      - redis
    image: 'unit_a'
    build:
      context: ./
      dockerfile: ./upload_unit/Dockerfile
      args:
        unitId: unit_a
        requestTimeout: 10000
        logsExpire: 86400
        redisHost: 'redis'
        redisPort: 6379
    container_name: unit_a
    networks:
      - app-network
  unit_b:
    depends_on:
      - redis
    image: 'unit_b'
    build:
      context: ./
      dockerfile: ./upload_unit/Dockerfile
      args:
        unitId: unit_b
        requestTimeout: 10000
        logsExpire: 86400
        redisHost: 'redis'
        redisPort: 6379
    container_name: unit_b
    networks:
      - app-network
  unit_c:
      depends_on:
        - redis
      image: 'unit_c'
      build:
        context: ./
        dockerfile: ./simple_unit/Dockerfile
        args:
          unitId: unit_c
          requestTimeout: 10000
          logsExpire: 86400
          redisHost: 'redis'
          redisPort: 6379
      container_name: unit_c
      networks:
        - app-network
  unit_d:
        depends_on:
          - redis
        image: 'unit_d'
        build:
          context: ./
          dockerfile: ./download_unit/Dockerfile
          args:
            unitId: unit_d
            requestTimeout: 10000
            logsExpire: 86400
            redisHost: 'redis'
            redisPort: 6379
        container_name: unit_d
        networks:
          - app-network
  unit_e:
        depends_on:
          - redis
        image: 'unit_e'
        build:
          context: ./
          dockerfile: ./another_simple_unit/Dockerfile
          args:
            unitId: unit_e
            requestTimeout: 10000
            logsExpire: 86400
            redisHost: 'redis'
            redisPort: 6379
        container_name: unit_e
        networks:
          - app-network
  unit_group:
      image: 'unit_group'
      depends_on:
        - redis
      build:
        context: ./
        dockerfile: ./unit_group/Dockerfile
        args:
          unitId: unit_group
          units: 'unit_a unit_b'
          requestTimeout: 10000
          pingTimeout: 3000
          redisHost: 'redis'
          redisPort: 6379
      container_name: unit_group
      networks:
        - app-network
  entry_point:
    depends_on:
      - redis
    image: 'entry_point'
    build:
      context: ./
      dockerfile: ./server/Dockerfile
      args:
        requestTimeout: 10000
        pingTimeout: 3000
        serverPort: 3000
        units: 'unit_group unit_c unit_d'
        redisHost: 'redis'
        redisPort: 6379
    container_name: entry_point
    ports:
      - "3000:3000"
    networks:
      - app-network
